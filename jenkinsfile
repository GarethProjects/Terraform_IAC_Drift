pipeline {
    agent any
    parameters {
        booleanParam(
            name: 'detectDrift',
            defaultValue: true,
            description: 'Set to true to detect configuration drift'
        )
    }
     environment {
        AWS_DEFAULT_REGION="us-east-2"
        THE_BUTLER_SAYS_SO=credentials('aws-creds')
    }
    
    stages {
        stage('Detect Configuration Drift') {
            steps {
                sh '''
                    terraform init
                    terraform plan -detailed-exitcode -out=tfplan
                '''
                script {
                    def exitCode = sh(
                        returnStatus: true,
                        script: 'echo $?'
                    ).trim().toInteger()
                    if (exitCode == 2) {
                        error "Configuration drift detected! Run 'terraform apply' to update the infrastructure."
                    } else if (exitCode == 1) {
                        error "There was an error running 'terraform plan'. Check the logs for details."
                    } else {
                        echo "No configuration drift detected."
                    }
                }
            }
        }
    }
}
